{"kind": "protocol-info", "rest": "[...]"}
{"kind": "response", "query-id": "1", "response": [{"level": "warning", "message": "Pattern [\n  Prims.smt_pat_or [\n      [Prims.smt_pat (x << l); Prims.smt_pat (l == l1 @ FStar.Pervasives.Native.Mktuple2 x y :: l2)];\n      [Prims.smt_pat (y << l); Prims.smt_pat (l == l1 @ FStar.Pervasives.Native.Mktuple2 x y :: l2)]\n    ]\n] uses theory symbols:  Prims.eq2 Prims.eq2", "ranges": [{"beg": [1010, 2], "end": [1010, 136], "fname": "FStar.List.Tot.Properties.fst"}]}, {"level": "warning", "message": "Pattern [\n  Prims.smt_pat (FStar.Seq.Properties.cons (FStar.Seq.Base.index s i)\n        (FStar.Seq.Base.slice s (i + 1) j))\n] uses theory symbols:  Prims.op_Addition 1", "ranges": [{"beg": [939, 2], "end": [939, 49], "fname": "FStar.Seq.Properties.fst"}]}, {"level": "warning", "message": "Pattern [Prims.smt_pat (FStar.Seq.Base.slice s 0 (FStar.Seq.Base.length s))] uses theory symbols:  0", "ranges": [{"beg": [958, 2], "end": [958, 33], "fname": "FStar.Seq.Properties.fst"}]}, {"level": "warning", "message": "Pattern [\n  Prims.smt_pat (FStar.Seq.Base.index (FStar.UInt.to_vec a) i);\n  Prims.smt_pat (a % Prims.pow2 m == 0)\n] uses theory symbols:  Prims.eq2 Prims.op_Modulus 0", "ranges": [{"beg": [625, 8], "end": [625, 66], "fname": "FStar.UInt.fst"}]}, {"level": "warning", "message": "Pattern [\n  Prims.smt_pat (FStar.Seq.Base.index (FStar.UInt.to_vec a) i);\n  Prims.smt_pat (a % Prims.pow2 m == 0)\n] uses theory symbols:  Prims.eq2 Prims.op_Modulus 0", "ranges": [{"beg": [626, 8], "end": [626, 23], "fname": "FStar.UInt.fst"}, {"beg": [625, 8], "end": [625, 66], "fname": "FStar.UInt.fst"}]}, {"level": "warning", "message": "Pattern [Prims.smt_pat (FStar.Seq.Base.index (FStar.UInt.to_vec a) i); Prims.smt_pat (a < Prims.pow2 m)] uses theory symbols:  Prims.op_LessThan", "ranges": [{"beg": [644, 8], "end": [644, 61], "fname": "FStar.UInt.fst"}]}, {"level": "warning", "message": "Pattern [Prims.smt_pat (FStar.Seq.Base.index (FStar.UInt.to_vec a) i); Prims.smt_pat (a < Prims.pow2 m)] uses theory symbols:  Prims.op_LessThan", "ranges": [{"beg": [645, 8], "end": [645, 22], "fname": "FStar.UInt.fst"}, {"beg": [644, 8], "end": [644, 61], "fname": "FStar.UInt.fst"}]}, {"level": "warning", "message": "Pattern [Prims.smt_pat (FStar.Seq.Base.index (FStar.UInt.to_vec (Prims.pow2 m - 1)) i)] uses theory symbols:  Prims.op_Subtraction 1", "ranges": [{"beg": [664, 8], "end": [664, 51], "fname": "FStar.UInt.fst"}]}, {"level": "warning", "message": "Pattern [Prims.smt_pat (FStar.Seq.Base.index (FStar.UInt.to_vec (Prims.pow2 m - 1)) i)] uses theory symbols:  Prims.op_Subtraction 1", "ranges": [{"beg": [665, 8], "end": [665, 25], "fname": "FStar.UInt.fst"}, {"beg": [664, 8], "end": [664, 51], "fname": "FStar.UInt.fst"}]}], "status": "success"}
{"kind": "response", "query-id": "2", "response": [{"level": "error", "message": "Expected expression of type \"int\"; got expression \"\"A\"\" of type \"string\"", "ranges": [{"beg": [4, 50], "end": [4, 51], "fname": "<input>"}]}], "status": "success"}
{"kind": "response", "query-id": "3", "response": [{"level": "error", "message": "Expected expression of type \"int\"; got expression \"\"A\"\" of type \"string\"", "ranges": [{"beg": [4, 50], "end": [4, 51], "fname": "<input>"}]}], "status": "failure"}
{"kind": "response", "query-id": "4", "response": [], "status": "success"}
{"contents": {"depth": 1, "goals": [{"goal": {"label": "", "type": "bool", "witness": "(*?u[...]*) _"}, "hyps": []}], "label": "at the time of failure", "location": "<location removed>", "smt-goals": []}, "kind": "message", "level": "proof-state", "query-id": "5"}
{"kind": "response", "query-id": "5", "response": [{"level": "error", "message": "user tactic failed: exact: 1 : int does not exactly solve the goal bool (witness = (*?u[...]*) _)", "ranges": [{"beg": [4, 14], "end": [4, 57], "fname": "<input>"}, {"beg": [59, 12], "end": [59, 16], "fname": "FStar.Tactics.Derived.fst"}]}], "status": "failure"}
