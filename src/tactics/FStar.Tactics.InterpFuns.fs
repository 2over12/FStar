#light "off"
module FStar.Tactics.InterpFuns

(* This module is awful, don't even look at it please. *)

open FStar
open FStar.All
open FStar.Syntax.Syntax
open FStar.Range

open FStar.Tactics.Types
open FStar.Tactics.Result
open FStar.Syntax.Embeddings
open FStar.Tactics.Native
open FStar.Tactics.Monad

module S     = FStar.Syntax.Syntax
module SS    = FStar.Syntax.Subst
module PC    = FStar.Parser.Const
module BU    = FStar.Util
module Print = FStar.Syntax.Print
module Cfg   = FStar.TypeChecker.Cfg
module E     = FStar.Tactics.Embedding
module RE    = FStar.Reflection.Embeddings
module NBETerm = FStar.TypeChecker.NBETerm
module NBET    = FStar.TypeChecker.NBETerm

let unembed e t n = FStar.Syntax.Embeddings.unembed e t true n
let embed e rng t n = FStar.Syntax.Embeddings.embed e t rng None n

let rec drop n l =
    if n = 0 then l
    else
        match l with
        | [] -> failwith "drop: impossible"
        | _::xs -> drop (n-1) xs

let timing_int (l:Ident.lid) f =
    fun psc cb args ->
        (* BU.print1 "Entering primitive %s {\n" (Ident.string_of_lid l); *)
        let r = f psc cb args in
        (* BU.print1 "%s }\n" (Ident.string_of_lid l); *)
        r

let timing_nbe (l:Ident.lid) f =
    fun nbe_cbs args ->
        (* BU.print1 "Entering NBE primitive %s {\n" (Ident.string_of_lid l); *)
        let r = f nbe_cbs args in
        (* BU.print1 "%s }\n" (Ident.string_of_lid l); *)
        r

let mk nm arity nunivs interp nbe_interp =
  let nm = PC.fstar_tactics_lid' ["Builtins"; nm] in
  { Cfg.name                         = nm
  ; Cfg.arity                        = arity
  ; Cfg.univ_arity                   = nunivs
  ; Cfg.auto_reflect                 = Some (arity - 1)
  ; Cfg.strong_reduction_ok          = true
  ; Cfg.requires_binder_substitution = true
  ; Cfg.interpretation               = timing_int nm interp
  ; Cfg.interpretation_nbe           = timing_nbe nm nbe_interp
  }

let mkt nm arity nunivs interp nbe_interp =
  let nm = PC.fstar_tactics_lid' ["Builtins"; nm] in
  { Cfg.name                         = nm
  ; Cfg.arity                        = arity
  ; Cfg.univ_arity                   = nunivs
  ; Cfg.auto_reflect                 = None
  ; Cfg.strong_reduction_ok          = true
  ; Cfg.requires_binder_substitution = true
  ; Cfg.interpretation               = timing_int nm interp
  ; Cfg.interpretation_nbe           = timing_nbe nm nbe_interp
  }

(* This _psc variant is a special case *)
let mk_total_interpretation_1_psc
    (f:Cfg.psc -> 't1 -> 'r)
    (e1: embedding<'t1>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    let r = f psc a1 in
    Some (embed er (Cfg.psc_range psc) r ncb))
  | _ ->
    None

let mk_total_nbe_interpretation_1_psc
    cb
    (f:Cfg.psc -> 't1 -> 'r)
    (e1: NBET.embedding<'t1>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    let r = f Cfg.null_psc a1 in // TODO: no psc here?
    Some (NBET.embed er cb r))
  | _ ->
    None

let mk_total_step_1_psc (nunivs:int) (name : string)
           (f : Cfg.psc -> 'a -> 'r)
           (ea : embedding<'a>)
           (er : embedding<'r>)
           (nf : Cfg.psc -> 'na -> 'nr)
           (nea : NBETerm.embedding<'na>)
           (ner : NBETerm.embedding<'nr>)
           : Cfg.primitive_step =
    mkt name 1 nunivs (mk_total_interpretation_1_psc     f  ea  er)
                      (fun cb args -> mk_total_nbe_interpretation_1_psc cb nf nea ner (drop nunivs args))


(* NOTE: THE REST OF THIS MODULE IS AUTOGENERATED
 * See .scripts/mk_tac_interps.sh *)

let mk_tactic_interpretation_1
    (t : 't1 -> tac<'r>)
    (e1:embedding<'t1>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed E.e_proofstate a2 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = run_safe (t a1) ps in
    Some (embed (E.e_result er) (Cfg.psc_range psc) r ncb)))
  | _ ->
    None

let mk_tactic_interpretation_2
    (t : 't1 -> 't2 -> tac<'r>)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed E.e_proofstate a3 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = run_safe (t a1 a2) ps in
    Some (embed (E.e_result er) (Cfg.psc_range psc) r ncb))))
  | _ ->
    None

let mk_tactic_interpretation_3
    (t : 't1 -> 't2 -> 't3 -> tac<'r>)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed E.e_proofstate a4 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = run_safe (t a1 a2 a3) ps in
    Some (embed (E.e_result er) (Cfg.psc_range psc) r ncb)))))
  | _ ->
    None

let mk_tactic_interpretation_4
    (t : 't1 -> 't2 -> 't3 -> 't4 -> tac<'r>)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed E.e_proofstate a5 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = run_safe (t a1 a2 a3 a4) ps in
    Some (embed (E.e_result er) (Cfg.psc_range psc) r ncb))))))
  | _ ->
    None

let mk_tactic_interpretation_5
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> tac<'r>)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed E.e_proofstate a6 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = run_safe (t a1 a2 a3 a4 a5) ps in
    Some (embed (E.e_result er) (Cfg.psc_range psc) r ncb)))))))
  | _ ->
    None

let mk_tactic_interpretation_6
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> tac<'r>)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (e6:embedding<'t6>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed E.e_proofstate a7 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = run_safe (t a1 a2 a3 a4 a5 a6) ps in
    Some (embed (E.e_result er) (Cfg.psc_range psc) r ncb))))))))
  | _ ->
    None

let mk_tactic_interpretation_7
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> tac<'r>)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (e6:embedding<'t6>)
    (e7:embedding<'t7>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed E.e_proofstate a8 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = run_safe (t a1 a2 a3 a4 a5 a6 a7) ps in
    Some (embed (E.e_result er) (Cfg.psc_range psc) r ncb)))))))))
  | _ ->
    None

let mk_tactic_interpretation_8
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> tac<'r>)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (e6:embedding<'t6>)
    (e7:embedding<'t7>)
    (e8:embedding<'t8>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed E.e_proofstate a9 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = run_safe (t a1 a2 a3 a4 a5 a6 a7 a8) ps in
    Some (embed (E.e_result er) (Cfg.psc_range psc) r ncb))))))))))
  | _ ->
    None

let mk_tactic_interpretation_9
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> tac<'r>)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (e6:embedding<'t6>)
    (e7:embedding<'t7>)
    (e8:embedding<'t8>)
    (e9:embedding<'t9>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed E.e_proofstate a10 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9) ps in
    Some (embed (E.e_result er) (Cfg.psc_range psc) r ncb)))))))))))
  | _ ->
    None

let mk_tactic_interpretation_10
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> tac<'r>)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (e6:embedding<'t6>)
    (e7:embedding<'t7>)
    (e8:embedding<'t8>)
    (e9:embedding<'t9>)
    (e10:embedding<'t10>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    BU.bind_opt (unembed E.e_proofstate a11 ncb) (fun ps ->
    let ps = set_ps_psc psc ps in
    let r = run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10) ps in
    Some (embed (E.e_result er) (Cfg.psc_range psc) r ncb))))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_1
    cb
    (t : 't1 -> tac<'r>)
    (e1:NBET.embedding<'t1>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a2) (fun ps ->
    let r = run_safe (t a1) ps in
    Some (NBET.embed (E.e_result_nbe er) cb r)))
  | _ ->
    None

let mk_tactic_nbe_interpretation_2
    cb
    (t : 't1 -> 't2 -> tac<'r>)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a3) (fun ps ->
    let r = run_safe (t a1 a2) ps in
    Some (NBET.embed (E.e_result_nbe er) cb r))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_3
    cb
    (t : 't1 -> 't2 -> 't3 -> tac<'r>)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a4) (fun ps ->
    let r = run_safe (t a1 a2 a3) ps in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_4
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> tac<'r>)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a5) (fun ps ->
    let r = run_safe (t a1 a2 a3 a4) ps in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_5
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> tac<'r>)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a6) (fun ps ->
    let r = run_safe (t a1 a2 a3 a4 a5) ps in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_6
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> tac<'r>)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (e6:NBET.embedding<'t6>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a7) (fun ps ->
    let r = run_safe (t a1 a2 a3 a4 a5 a6) ps in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_7
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> tac<'r>)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (e6:NBET.embedding<'t6>)
    (e7:NBET.embedding<'t7>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a8) (fun ps ->
    let r = run_safe (t a1 a2 a3 a4 a5 a6 a7) ps in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_8
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> tac<'r>)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (e6:NBET.embedding<'t6>)
    (e7:NBET.embedding<'t7>)
    (e8:NBET.embedding<'t8>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a9) (fun ps ->
    let r = run_safe (t a1 a2 a3 a4 a5 a6 a7 a8) ps in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_9
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> tac<'r>)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (e6:NBET.embedding<'t6>)
    (e7:NBET.embedding<'t7>)
    (e8:NBET.embedding<'t8>)
    (e9:NBET.embedding<'t9>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a10) (fun ps ->
    let r = run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9) ps in
    Some (NBET.embed (E.e_result_nbe er) cb r)))))))))))
  | _ ->
    None

let mk_tactic_nbe_interpretation_10
    cb
    (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> tac<'r>)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (e6:NBET.embedding<'t6>)
    (e7:NBET.embedding<'t7>)
    (e8:NBET.embedding<'t8>)
    (e9:NBET.embedding<'t9>)
    (e10:NBET.embedding<'t10>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _); (a11, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    BU.bind_opt (NBET.unembed E.e_proofstate_nbe cb a11) (fun ps ->
    let r = run_safe (t a1 a2 a3 a4 a5 a6 a7 a8 a9 a10) ps in
    Some (NBET.embed (E.e_result_nbe er) cb r))))))))))))
  | _ ->
    None

let mk_total_interpretation_1
    (f : 't1 -> 'r)
    (e1:embedding<'t1>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    let r = f a1 in
    Some (embed er (Cfg.psc_range psc) r ncb))
  | _ ->
    None

let mk_total_interpretation_2
    (f : 't1 -> 't2 -> 'r)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    let r = f a1 a2 in
    Some (embed er (Cfg.psc_range psc) r ncb)))
  | _ ->
    None

let mk_total_interpretation_3
    (f : 't1 -> 't2 -> 't3 -> 'r)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    let r = f a1 a2 a3 in
    Some (embed er (Cfg.psc_range psc) r ncb))))
  | _ ->
    None

let mk_total_interpretation_4
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 'r)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    let r = f a1 a2 a3 a4 in
    Some (embed er (Cfg.psc_range psc) r ncb)))))
  | _ ->
    None

let mk_total_interpretation_5
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 'r)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    let r = f a1 a2 a3 a4 a5 in
    Some (embed er (Cfg.psc_range psc) r ncb))))))
  | _ ->
    None

let mk_total_interpretation_6
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 'r)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (e6:embedding<'t6>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    let r = f a1 a2 a3 a4 a5 a6 in
    Some (embed er (Cfg.psc_range psc) r ncb)))))))
  | _ ->
    None

let mk_total_interpretation_7
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 'r)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (e6:embedding<'t6>)
    (e7:embedding<'t7>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    let r = f a1 a2 a3 a4 a5 a6 a7 in
    Some (embed er (Cfg.psc_range psc) r ncb))))))))
  | _ ->
    None

let mk_total_interpretation_8
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 'r)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (e6:embedding<'t6>)
    (e7:embedding<'t7>)
    (e8:embedding<'t8>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    let r = f a1 a2 a3 a4 a5 a6 a7 a8 in
    Some (embed er (Cfg.psc_range psc) r ncb)))))))))
  | _ ->
    None

let mk_total_interpretation_9
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 'r)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (e6:embedding<'t6>)
    (e7:embedding<'t7>)
    (e8:embedding<'t8>)
    (e9:embedding<'t9>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    let r = f a1 a2 a3 a4 a5 a6 a7 a8 a9 in
    Some (embed er (Cfg.psc_range psc) r ncb))))))))))
  | _ ->
    None

let mk_total_interpretation_10
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 'r)
    (e1:embedding<'t1>)
    (e2:embedding<'t2>)
    (e3:embedding<'t3>)
    (e4:embedding<'t4>)
    (e5:embedding<'t5>)
    (e6:embedding<'t6>)
    (e7:embedding<'t7>)
    (e8:embedding<'t8>)
    (e9:embedding<'t9>)
    (e10:embedding<'t10>)
    (er:embedding<'r>)
    (psc:Cfg.psc)
    (ncb:norm_cb)
    (args:args)
  : option<term>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _)] ->
    BU.bind_opt (unembed e1 a1 ncb) (fun a1 ->
    BU.bind_opt (unembed e2 a2 ncb) (fun a2 ->
    BU.bind_opt (unembed e3 a3 ncb) (fun a3 ->
    BU.bind_opt (unembed e4 a4 ncb) (fun a4 ->
    BU.bind_opt (unembed e5 a5 ncb) (fun a5 ->
    BU.bind_opt (unembed e6 a6 ncb) (fun a6 ->
    BU.bind_opt (unembed e7 a7 ncb) (fun a7 ->
    BU.bind_opt (unembed e8 a8 ncb) (fun a8 ->
    BU.bind_opt (unembed e9 a9 ncb) (fun a9 ->
    BU.bind_opt (unembed e10 a10 ncb) (fun a10 ->
    let r = f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 in
    Some (embed er (Cfg.psc_range psc) r ncb)))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_1
    cb
    (f : 't1 -> 'r)
    (e1:NBET.embedding<'t1>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    let r = f a1 in
    Some (NBET.embed er cb r))
  | _ ->
    None

let mk_total_nbe_interpretation_2
    cb
    (f : 't1 -> 't2 -> 'r)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    let r = f a1 a2 in
    Some (NBET.embed er cb r)))
  | _ ->
    None

let mk_total_nbe_interpretation_3
    cb
    (f : 't1 -> 't2 -> 't3 -> 'r)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    let r = f a1 a2 a3 in
    Some (NBET.embed er cb r))))
  | _ ->
    None

let mk_total_nbe_interpretation_4
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 'r)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    let r = f a1 a2 a3 a4 in
    Some (NBET.embed er cb r)))))
  | _ ->
    None

let mk_total_nbe_interpretation_5
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 'r)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    let r = f a1 a2 a3 a4 a5 in
    Some (NBET.embed er cb r))))))
  | _ ->
    None

let mk_total_nbe_interpretation_6
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 'r)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (e6:NBET.embedding<'t6>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    let r = f a1 a2 a3 a4 a5 a6 in
    Some (NBET.embed er cb r)))))))
  | _ ->
    None

let mk_total_nbe_interpretation_7
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 'r)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (e6:NBET.embedding<'t6>)
    (e7:NBET.embedding<'t7>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    let r = f a1 a2 a3 a4 a5 a6 a7 in
    Some (NBET.embed er cb r))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_8
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 'r)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (e6:NBET.embedding<'t6>)
    (e7:NBET.embedding<'t7>)
    (e8:NBET.embedding<'t8>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    let r = f a1 a2 a3 a4 a5 a6 a7 a8 in
    Some (NBET.embed er cb r)))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_9
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 'r)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (e6:NBET.embedding<'t6>)
    (e7:NBET.embedding<'t7>)
    (e8:NBET.embedding<'t8>)
    (e9:NBET.embedding<'t9>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    let r = f a1 a2 a3 a4 a5 a6 a7 a8 a9 in
    Some (NBET.embed er cb r))))))))))
  | _ ->
    None

let mk_total_nbe_interpretation_10
    cb
    (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 'r)
    (e1:NBET.embedding<'t1>)
    (e2:NBET.embedding<'t2>)
    (e3:NBET.embedding<'t3>)
    (e4:NBET.embedding<'t4>)
    (e5:NBET.embedding<'t5>)
    (e6:NBET.embedding<'t6>)
    (e7:NBET.embedding<'t7>)
    (e8:NBET.embedding<'t8>)
    (e9:NBET.embedding<'t9>)
    (e10:NBET.embedding<'t10>)
    (er:NBET.embedding<'r>)
    (args:NBET.args)
  : option<NBET.t>
  =
  match args with
  | [(a1, _); (a2, _); (a3, _); (a4, _); (a5, _); (a6, _); (a7, _); (a8, _); (a9, _); (a10, _)] ->
    BU.bind_opt (NBET.unembed e1 cb a1) (fun a1 ->
    BU.bind_opt (NBET.unembed e2 cb a2) (fun a2 ->
    BU.bind_opt (NBET.unembed e3 cb a3) (fun a3 ->
    BU.bind_opt (NBET.unembed e4 cb a4) (fun a4 ->
    BU.bind_opt (NBET.unembed e5 cb a5) (fun a5 ->
    BU.bind_opt (NBET.unembed e6 cb a6) (fun a6 ->
    BU.bind_opt (NBET.unembed e7 cb a7) (fun a7 ->
    BU.bind_opt (NBET.unembed e8 cb a8) (fun a8 ->
    BU.bind_opt (NBET.unembed e9 cb a9) (fun a9 ->
    BU.bind_opt (NBET.unembed e10 cb a10) (fun a10 ->
    let r = f a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 in
    Some (NBET.embed er cb r)))))))))))
  | _ ->
    None

let mk_tac_step_1
  (nunivs:int)
  (name:string)
  (t : 't1 -> tac<'r>)
  (e1:embedding<'t1>)
  (er:embedding<'r>)
  (nt : 'nt1 -> tac<'nr>)
  (ne1:NBET.embedding<'nt1>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 2 nunivs
      (mk_tactic_interpretation_1 t e1 er)
      (fun cb args -> mk_tactic_nbe_interpretation_1 cb nt ne1 ner (drop nunivs args))

let mk_tac_step_2
  (nunivs:int)
  (name:string)
  (t : 't1 -> 't2 -> tac<'r>)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (er:embedding<'r>)
  (nt : 'nt1 -> 't2 -> tac<'nr>)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 3 nunivs
      (mk_tactic_interpretation_2 t e1 e2 er)
      (fun cb args -> mk_tactic_nbe_interpretation_2 cb nt ne1 ne2 ner (drop nunivs args))

let mk_tac_step_3
  (nunivs:int)
  (name:string)
  (t : 't1 -> 't2 -> 't3 -> tac<'r>)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (er:embedding<'r>)
  (nt : 'nt1 -> 't2 -> 't3 -> tac<'nr>)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 4 nunivs
      (mk_tactic_interpretation_3 t e1 e2 e3 er)
      (fun cb args -> mk_tactic_nbe_interpretation_3 cb nt ne1 ne2 ne3 ner (drop nunivs args))

let mk_tac_step_4
  (nunivs:int)
  (name:string)
  (t : 't1 -> 't2 -> 't3 -> 't4 -> tac<'r>)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (er:embedding<'r>)
  (nt : 'nt1 -> 't2 -> 't3 -> 't4 -> tac<'nr>)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 5 nunivs
      (mk_tactic_interpretation_4 t e1 e2 e3 e4 er)
      (fun cb args -> mk_tactic_nbe_interpretation_4 cb nt ne1 ne2 ne3 ne4 ner (drop nunivs args))

let mk_tac_step_5
  (nunivs:int)
  (name:string)
  (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> tac<'r>)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (er:embedding<'r>)
  (nt : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> tac<'nr>)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 6 nunivs
      (mk_tactic_interpretation_5 t e1 e2 e3 e4 e5 er)
      (fun cb args -> mk_tactic_nbe_interpretation_5 cb nt ne1 ne2 ne3 ne4 ne5 ner (drop nunivs args))

let mk_tac_step_6
  (nunivs:int)
  (name:string)
  (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> tac<'r>)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (e6:embedding<'t6>)
  (er:embedding<'r>)
  (nt : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> tac<'nr>)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ne6:NBET.embedding<'nt6>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 7 nunivs
      (mk_tactic_interpretation_6 t e1 e2 e3 e4 e5 e6 er)
      (fun cb args -> mk_tactic_nbe_interpretation_6 cb nt ne1 ne2 ne3 ne4 ne5 ne6 ner (drop nunivs args))

let mk_tac_step_7
  (nunivs:int)
  (name:string)
  (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> tac<'r>)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (e6:embedding<'t6>)
  (e7:embedding<'t7>)
  (er:embedding<'r>)
  (nt : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> tac<'nr>)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ne6:NBET.embedding<'nt6>)
  (ne7:NBET.embedding<'nt7>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 8 nunivs
      (mk_tactic_interpretation_7 t e1 e2 e3 e4 e5 e6 e7 er)
      (fun cb args -> mk_tactic_nbe_interpretation_7 cb nt ne1 ne2 ne3 ne4 ne5 ne6 ne7 ner (drop nunivs args))

let mk_tac_step_8
  (nunivs:int)
  (name:string)
  (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> tac<'r>)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (e6:embedding<'t6>)
  (e7:embedding<'t7>)
  (e8:embedding<'t8>)
  (er:embedding<'r>)
  (nt : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> tac<'nr>)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ne6:NBET.embedding<'nt6>)
  (ne7:NBET.embedding<'nt7>)
  (ne8:NBET.embedding<'nt8>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 9 nunivs
      (mk_tactic_interpretation_8 t e1 e2 e3 e4 e5 e6 e7 e8 er)
      (fun cb args -> mk_tactic_nbe_interpretation_8 cb nt ne1 ne2 ne3 ne4 ne5 ne6 ne7 ne8 ner (drop nunivs args))

let mk_tac_step_9
  (nunivs:int)
  (name:string)
  (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> tac<'r>)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (e6:embedding<'t6>)
  (e7:embedding<'t7>)
  (e8:embedding<'t8>)
  (e9:embedding<'t9>)
  (er:embedding<'r>)
  (nt : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> tac<'nr>)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ne6:NBET.embedding<'nt6>)
  (ne7:NBET.embedding<'nt7>)
  (ne8:NBET.embedding<'nt8>)
  (ne9:NBET.embedding<'nt9>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 10 nunivs
      (mk_tactic_interpretation_9 t e1 e2 e3 e4 e5 e6 e7 e8 e9 er)
      (fun cb args -> mk_tactic_nbe_interpretation_9 cb nt ne1 ne2 ne3 ne4 ne5 ne6 ne7 ne8 ne9 ner (drop nunivs args))

let mk_tac_step_10
  (nunivs:int)
  (name:string)
  (t : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> tac<'r>)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (e6:embedding<'t6>)
  (e7:embedding<'t7>)
  (e8:embedding<'t8>)
  (e9:embedding<'t9>)
  (e10:embedding<'t10>)
  (er:embedding<'r>)
  (nt : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> tac<'nr>)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ne6:NBET.embedding<'nt6>)
  (ne7:NBET.embedding<'nt7>)
  (ne8:NBET.embedding<'nt8>)
  (ne9:NBET.embedding<'nt9>)
  (ne10:NBET.embedding<'nt10>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 11 nunivs
      (mk_tactic_interpretation_10 t e1 e2 e3 e4 e5 e6 e7 e8 e9 e10 er)
      (fun cb args -> mk_tactic_nbe_interpretation_10 cb nt ne1 ne2 ne3 ne4 ne5 ne6 ne7 ne8 ne9 ne10 ner (drop nunivs args))

let mk_total_step_1
  (nunivs:int)
  (name:string)
  (f : 't1 -> 'r)
  (e1:embedding<'t1>)
  (er:embedding<'r>)
  (nf : 'nt1 -> 'nr)
  (ne1:NBET.embedding<'nt1>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 2 nunivs
      (mk_total_interpretation_1 f e1 er)
      (fun cb args -> mk_total_nbe_interpretation_1 cb nf ne1 ner (drop nunivs args))

let mk_total_step_2
  (nunivs:int)
  (name:string)
  (f : 't1 -> 't2 -> 'r)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (er:embedding<'r>)
  (nf : 'nt1 -> 't2 -> 'nr)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 3 nunivs
      (mk_total_interpretation_2 f e1 e2 er)
      (fun cb args -> mk_total_nbe_interpretation_2 cb nf ne1 ne2 ner (drop nunivs args))

let mk_total_step_3
  (nunivs:int)
  (name:string)
  (f : 't1 -> 't2 -> 't3 -> 'r)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (er:embedding<'r>)
  (nf : 'nt1 -> 't2 -> 't3 -> 'nr)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 4 nunivs
      (mk_total_interpretation_3 f e1 e2 e3 er)
      (fun cb args -> mk_total_nbe_interpretation_3 cb nf ne1 ne2 ne3 ner (drop nunivs args))

let mk_total_step_4
  (nunivs:int)
  (name:string)
  (f : 't1 -> 't2 -> 't3 -> 't4 -> 'r)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (er:embedding<'r>)
  (nf : 'nt1 -> 't2 -> 't3 -> 't4 -> 'nr)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 5 nunivs
      (mk_total_interpretation_4 f e1 e2 e3 e4 er)
      (fun cb args -> mk_total_nbe_interpretation_4 cb nf ne1 ne2 ne3 ne4 ner (drop nunivs args))

let mk_total_step_5
  (nunivs:int)
  (name:string)
  (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 'r)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (er:embedding<'r>)
  (nf : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 'nr)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 6 nunivs
      (mk_total_interpretation_5 f e1 e2 e3 e4 e5 er)
      (fun cb args -> mk_total_nbe_interpretation_5 cb nf ne1 ne2 ne3 ne4 ne5 ner (drop nunivs args))

let mk_total_step_6
  (nunivs:int)
  (name:string)
  (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 'r)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (e6:embedding<'t6>)
  (er:embedding<'r>)
  (nf : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 'nr)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ne6:NBET.embedding<'nt6>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 7 nunivs
      (mk_total_interpretation_6 f e1 e2 e3 e4 e5 e6 er)
      (fun cb args -> mk_total_nbe_interpretation_6 cb nf ne1 ne2 ne3 ne4 ne5 ne6 ner (drop nunivs args))

let mk_total_step_7
  (nunivs:int)
  (name:string)
  (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 'r)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (e6:embedding<'t6>)
  (e7:embedding<'t7>)
  (er:embedding<'r>)
  (nf : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 'nr)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ne6:NBET.embedding<'nt6>)
  (ne7:NBET.embedding<'nt7>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 8 nunivs
      (mk_total_interpretation_7 f e1 e2 e3 e4 e5 e6 e7 er)
      (fun cb args -> mk_total_nbe_interpretation_7 cb nf ne1 ne2 ne3 ne4 ne5 ne6 ne7 ner (drop nunivs args))

let mk_total_step_8
  (nunivs:int)
  (name:string)
  (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 'r)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (e6:embedding<'t6>)
  (e7:embedding<'t7>)
  (e8:embedding<'t8>)
  (er:embedding<'r>)
  (nf : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 'nr)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ne6:NBET.embedding<'nt6>)
  (ne7:NBET.embedding<'nt7>)
  (ne8:NBET.embedding<'nt8>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 9 nunivs
      (mk_total_interpretation_8 f e1 e2 e3 e4 e5 e6 e7 e8 er)
      (fun cb args -> mk_total_nbe_interpretation_8 cb nf ne1 ne2 ne3 ne4 ne5 ne6 ne7 ne8 ner (drop nunivs args))

let mk_total_step_9
  (nunivs:int)
  (name:string)
  (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 'r)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (e6:embedding<'t6>)
  (e7:embedding<'t7>)
  (e8:embedding<'t8>)
  (e9:embedding<'t9>)
  (er:embedding<'r>)
  (nf : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 'nr)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ne6:NBET.embedding<'nt6>)
  (ne7:NBET.embedding<'nt7>)
  (ne8:NBET.embedding<'nt8>)
  (ne9:NBET.embedding<'nt9>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 10 nunivs
      (mk_total_interpretation_9 f e1 e2 e3 e4 e5 e6 e7 e8 e9 er)
      (fun cb args -> mk_total_nbe_interpretation_9 cb nf ne1 ne2 ne3 ne4 ne5 ne6 ne7 ne8 ne9 ner (drop nunivs args))

let mk_total_step_10
  (nunivs:int)
  (name:string)
  (f : 't1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 'r)
  (e1:embedding<'t1>)
  (e2:embedding<'t2>)
  (e3:embedding<'t3>)
  (e4:embedding<'t4>)
  (e5:embedding<'t5>)
  (e6:embedding<'t6>)
  (e7:embedding<'t7>)
  (e8:embedding<'t8>)
  (e9:embedding<'t9>)
  (e10:embedding<'t10>)
  (er:embedding<'r>)
  (nf : 'nt1 -> 't2 -> 't3 -> 't4 -> 't5 -> 't6 -> 't7 -> 't8 -> 't9 -> 't10 -> 'nr)
  (ne1:NBET.embedding<'nt1>)
  (ne2:NBET.embedding<'nt2>)
  (ne3:NBET.embedding<'nt3>)
  (ne4:NBET.embedding<'nt4>)
  (ne5:NBET.embedding<'nt5>)
  (ne6:NBET.embedding<'nt6>)
  (ne7:NBET.embedding<'nt7>)
  (ne8:NBET.embedding<'nt8>)
  (ne9:NBET.embedding<'nt9>)
  (ne10:NBET.embedding<'nt10>)
  (ner:NBET.embedding<'nr>)
  : Cfg.primitive_step
  =
    mk name 11 nunivs
      (mk_total_interpretation_10 f e1 e2 e3 e4 e5 e6 e7 e8 e9 e10 er)
      (fun cb args -> mk_total_nbe_interpretation_10 cb nf ne1 ne2 ne3 ne4 ne5 ne6 ne7 ne8 ne9 ne10 ner (drop nunivs args))

