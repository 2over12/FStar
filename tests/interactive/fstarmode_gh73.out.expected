{"kind": "protocol-info", "rest": "[...]"}
{"kind": "response", "query-id": "1", "response": [{"level": "warning", "message": "SMT may not be able to prove the types of s at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(156,22-156,23) (FStar.Reflection.Types.term) and l1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(232,23-232,25) (Prims.list FStar.Reflection.Types.term) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [156, 22], "end": [156, 23], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of s at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(156,22-156,23) (FStar.Reflection.Types.term) and a1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(240,18-240,20) (FStar.Reflection.Data.argv) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [156, 22], "end": [156, 23], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of s at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(156,22-156,23) (FStar.Reflection.Types.term) and c1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(248,18-248,20) (FStar.Reflection.Types.comp) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [156, 22], "end": [156, 23], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of l1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(232,23-232,25) (Prims.list FStar.Reflection.Types.term) and s at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(156,22-156,23) (FStar.Reflection.Types.term) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [232, 23], "end": [232, 25], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of l1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(232,23-232,25) (Prims.list FStar.Reflection.Types.term) and a1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(240,18-240,20) (FStar.Reflection.Data.argv) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [232, 23], "end": [232, 25], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of l1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(232,23-232,25) (Prims.list FStar.Reflection.Types.term) and c1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(248,18-248,20) (FStar.Reflection.Types.comp) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [232, 23], "end": [232, 25], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of a1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(240,18-240,20) (FStar.Reflection.Data.argv) and s at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(156,22-156,23) (FStar.Reflection.Types.term) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [240, 18], "end": [240, 20], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of a1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(240,18-240,20) (FStar.Reflection.Data.argv) and l1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(232,23-232,25) (Prims.list FStar.Reflection.Types.term) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [240, 18], "end": [240, 20], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of a1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(240,18-240,20) (FStar.Reflection.Data.argv) and c1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(248,18-248,20) (FStar.Reflection.Types.comp) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [240, 18], "end": [240, 20], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of c1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(248,18-248,20) (FStar.Reflection.Types.comp) and s at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(156,22-156,23) (FStar.Reflection.Types.term) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [248, 18], "end": [248, 20], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of c1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(248,18-248,20) (FStar.Reflection.Types.comp) and l1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(232,23-232,25) (Prims.list FStar.Reflection.Types.term) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [248, 18], "end": [248, 20], "fname": "FStar.Reflection.Derived.fst"}]}, {"level": "warning", "message": "SMT may not be able to prove the types of c1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(248,18-248,20) (FStar.Reflection.Types.comp) and a1 at C:\\cygwin64\\home\\aseemr\\ev1\\FStar\\bin\\..\\ulib\\FStar.Reflection.Derived.fst(240,18-240,20) (FStar.Reflection.Data.argv) to be equal, if the proof fails, try annotating these with the same type\n", "number": 290, "ranges": [{"beg": [248, 18], "end": [248, 20], "fname": "FStar.Reflection.Derived.fst"}]}], "status": "success"}
{"kind": "response", "query-id": "2", "response": [{"level": "error", "message": "Expected expression of type \"int\"; got expression \"\"A\"\" of type \"string\"", "number": 189, "ranges": [{"beg": [4, 48], "end": [4, 51], "fname": "<input>"}]}], "status": "success"}
{"kind": "response", "query-id": "3", "response": [{"level": "error", "message": "Expected expression of type \"int\"; got expression \"\"A\"\" of type \"string\"", "number": 189, "ranges": [{"beg": [4, 48], "end": [4, 51], "fname": "<input>"}]}], "status": "failure"}
{"kind": "response", "query-id": "4", "response": [], "status": "success"}
{"contents": {"depth": 1, "goals": [{"goal": {"label": "", "type": "bool", "witness": "(*?u[...]*) _"}, "hyps": []}], "label": "at the time of failure", "location": "<location removed>", "smt-goals": [], "urgency": 1}, "kind": "message", "level": "proof-state", "query-id": "5"}
{"kind": "response", "query-id": "5", "response": [{"level": "error", "message": "user tactic failed: `exact: 1 : int does not exactly solve the goal bool (witness = (*?u[...]*) _)`", "number": 228, "ranges": [{"beg": [4, 14], "end": [4, 57], "fname": "<input>"}, {"beg": [76, 12], "end": [76, 16], "fname": "FStar.Tactics.Derived.fst"}]}], "status": "failure"}
