.PHONY: indent extra

FSTAR_HOME=..

include ml/Makefile.realized

#AR: 01/03
NOEXTRACT_FILES=$(wildcard experimental/Steel.*.fst experimental/Steel.*.fsti)

#The steel files are included below for native compilation of the framing tactic

OUTPUT_DIRECTORY=$(DUNE_SNAPSHOT)/fstar-stdlib/generated

include $(FSTAR_HOME)/.common.mk
include gmake/z3.mk
include gmake/fstar.mk

FSTAR_FILES:=$(filter-out $(NOEXTRACT_FILES),$(wildcard *.fst *.fsti)) $(wildcard FStar.InteractiveHelpers.*.fst)

ifndef SKIP_EXPERIMENTAL
  FSTAR_FILES += \
	$(filter-out $(NOEXTRACT_FILES),$(wildcard experimental/*.fst experimental/*.fsti)) \
        Steel.Effect.Common.fst \
        Steel.ST.GenElim.Base.fst
endif

CODEGEN = Plugin
MY_FSTAR=$(RUNLIM) $(FSTAR) $(SIL) $(OTHERFLAGS) --cache_checked_modules --odir $(OUTPUT_DIRECTORY) --cache_dir .cache --warn_error @241
EXTRACT_MODULES=--extract '* $(NOEXTRACT_MODULES)'

# And then, in a separate invocation, from each .checked we
# extract an .ml file
$(OUTPUT_DIRECTORY)/%.ml:
	@echo "[EXTRACT   $(basename $(notdir $@))]"
	$(Q)$(MY_FSTAR) $(subst .checked,,$(notdir $<)) --codegen $(CODEGEN) --extract_module $(basename $(notdir $(subst .checked,,$<)))

.depend.extract:
	$(Q)mkdir -p .cache
	true $(shell rm -f .depend.extract.rsp) $(foreach f,$(FSTAR_FILES),$(shell echo $(f) >> .depend.extract.rsp))
	$(Q)$(MY_FSTAR) --dep full $(EXTRACT_MODULES) $(addprefix --include , $(INCLUDE_PATHS)) @.depend.extract.rsp > .depend.extract
	@echo "[DEPEND]"

depend.extract: .depend.extract

include .depend.extract

.PHONY: handwritten handwritten-tac all-ml dune-snapshot

handwritten:
	+$(MAKE) -C ml dune-handwritten-snapshot

handwritten-tac:
	cp tactics_ml/*.ml $(DUNE_SNAPSHOT)/fstar-stdlib

all-ml: $(ALL_ML_FILES)

dune-snapshot: all-ml handwritten handwritten-tac
