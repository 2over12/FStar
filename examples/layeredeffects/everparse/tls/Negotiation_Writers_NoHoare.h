/* 
  This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
  KreMLin invocation: /home/tahina/everest/mitls_dev/kremlin/krml -skip-compilation -silent -warn-error -9-7-6@4-14-15+11-20 -add-include "kremlin/internal/compat.h" -ccopts -Wno-type-limits,-Wno-unused,-Wno-uninitialized -ccopts -DDEBUGFLAGS_DEBUG,-DDEBUGFLAGS_DEBUG_CDH,-DDEBUGFLAGS_DEBUG_EPOCHS,-DDEBUGFLAGS_DEBUG_FFI,-DDEBUGFLAGS_DEBUG_HS,-DDEBUGFLAGS_DEBUG_HSL,-DDEBUGFLAGS_DEBUG_KS,-DDEBUGFLAGS_DEBUG_NGO,-DDEBUGFLAGS_DEBUG_QUIC,-DDEBUGFLAGS_DEBUG_RECORD,-DDEBUGFLAGS_DEBUG_TLS,-DDEBUGFLAGS_DEBUG_AEP -fnoanonymous-unions -fparentheses -fno-shadow -fcurly-braces -drop DebugFlags -library EverCrypt,EverCrypt.* -no-prefix MITLS.Init -add-early-include "log_to_choice.h" -bundle EverCrypt,EverCrypt.\*[rename=EverCrypt] -bundle Vale.*,Hacl.*[rename=Unused1] -bundle LowParse.\*,LowParseWrappers,LowParseWriters,LowParseWriters.\*[rename=LowParse] -bundle Format.\* -bundle FStar.\*,LowStar.\*,C,C.\*[rename=Mitls_Kremlib] -bundle Parsers.ClientHello=Parsers.\*,ParsersAux.\*[rename=Parsers] -bundle Spec.\* -bundle Test.\* -bundle Meta.\* -bundle Lib.*[rename=Hacl_Lib] -bundle TLSConstants=QD.TLS_protocolVersion,List.Helpers -bundle Hashing=Hashing.Spec,Hashing,Hashing.CRF,HMAC,HKDF,HMAC.UFCMA -bundle TLS.Handshake=TLS.Handshake.\*,Old.HMAC.UFCMA,Old.Epochs,Old.KeySchedule[rename=Handshake] -bundle StatefulLHAE=AEAD_GCM,LHAEPlain,StatefulPlain -bundle StreamPlain+StreamAE=[rename=StreamAE] -bundle TLS.Curve25519+DHGroup+ECGroup+CommonDH=[rename=CommonDH] -bundle Content=DataStream -bundle Record+StAE=Transport,StreamDeltas[rename=Record] -bundle PMS=RSAKey,TLSPRF -bundle MITLS.Repr.*[rename=Reprs] -bundle Buffer.Utils,Crypto.Indexing,Crypto.Plain,Crypto.Symmetric.Bytes[rename=Crypto_Plain] -bundle Flags,Flag,TLSInfoFlags[rename=Flags] -bundle Model,Model.\*[rename=Unused] -bundle Token.UF1CMA,AEAD,AEAD.Pkg @dist/all/Makefile.basic.rsp -tmpdir dist/all/ -o libmitls.a
  F* version: 015b72e3
  KreMLin version: 0f08f124
 */
#include "kremlin/internal/compat.h"
#include "log_to_choice.h"
#include "kremlib.h"
#ifndef __Negotiation_Writers_NoHoare_H
#define __Negotiation_Writers_NoHoare_H

#include "Spec.h"
#include "Parsers.h"
#include "LowParse.h"
#include "EverCrypt.h"
#include "Mitls_Kremlib.h"
#include "PSK.h"
#include "CipherSuite.h"
#include "Prims.h"
#include "TLSConstants.h"


#define LowParseWriters_ICorrect 0
#define LowParseWriters_IError 1
#define LowParseWriters_IOverflow 2

typedef uint8_t LowParseWriters_iresult_____tags;

typedef struct LowParseWriters_iresult_____s
{
  LowParseWriters_iresult_____tags tag;
  union {
    uint32_t case_ICorrect;
    Prims_string case_IError;
  }
  val;
}
LowParseWriters_iresult____;

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_extract_compute_binder(
  LowParseWriters_rptr tc,
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_extract_obfuscate_age(
  uint32_t now,
  LowParseWriters_rptr ri,
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_extract_write_psk_key_exchange_modes(
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_extract_write_clientHelloExtension_CHE_early_data(
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_extract_write_psk_kex(
  bool allow_psk_resumption,
  bool allow_dhe_resumption,
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_extract_write_binders(
  LowParseWriters_Parsers_rlptr lri,
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_extract_write_pskidentities(
  LowParseWriters_Parsers_rlptr lri,
  uint32_t now,
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_extract_write_pre_shared_key(
  LowParseWriters_Parsers_rlptr lri,
  uint32_t now,
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_extract_write_final_extensions(
  LowParseWriters_rptr cfg,
  bool edi,
  LowParseWriters_Parsers_rlptr lri,
  uint32_t now,
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

typedef struct FStar_Pervasives_Native_option__LowParseWriters_rptr_s
{
  FStar_Pervasives_Native_option__Prims_string_tags tag;
  LowParseWriters_rptr v;
}
FStar_Pervasives_Native_option__LowParseWriters_rptr;

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_extract_keyshares(
  LowParseWriters_rptr cfg,
  FStar_Pervasives_Native_option__LowParseWriters_rptr ks,
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

LowParseWriters_iresult____
Negotiation_Writers_NoHoare_write_extensions(
  LowParseWriters_rptr cfg,
  FStar_Pervasives_Native_option__LowParseWriters_rptr ks,
  bool edi,
  LowParseWriters_Parsers_rlptr lri,
  uint32_t now,
  uint8_t *buf,
  uint32_t len,
  uint32_t pos
);

#define __Negotiation_Writers_NoHoare_H_DEFINED
#endif
